{"version":3,"sources":["components/MovieList.js","components/MovieListHeading.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["genericPoster","windowWidth","document","body","clientWidth","MovieList","props","movieNomsArray","localStorage","getItem","JSON","parse","useState","movieNoms","setMovieNoms","handleAdd","event","movie","target","value","some","e","imdbID","length","handleRemove","nomList","filter","item","useEffect","setItem","stringify","displayBanner","getElementById","classList","add","remove","id","className","movies","map","src","Poster","alt","Title","Year","type","onClick","disabled","nominated","MovieListHeading","heading","SearchBox","onChange","setSearchValue","placeholder","App","setMovies","searchValue","getMovieRequest","a","url","fetch","response","json","responseJSON","Search","timeoutId","setTimeout","clearTimeout","maxReached","banner","innerHTML","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9d0f9a97.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst genericPoster = 'https://s.studiobinder.com/wp-content/uploads/2017/12/Movie-Poster-Template-Dark-with-Image.jpg?x81279';\nlet windowWidth = document.body.clientWidth;\n\nconst MovieList = (props) => {\n    \n    let movieNomsArray = localStorage.getItem('savedMovieNoms') ? JSON.parse(localStorage.getItem('savedMovieNoms')) : [];\n\n    const [movieNoms, setMovieNoms] = useState(movieNomsArray || []);\n\n    \n    function handleAdd(event) {\n        let movie = JSON.parse(event.target.value);\n\n        if (!movieNoms.some(e => e.imdbID === movie.imdbID)){\n            if (movieNoms.length < 5){\n                setMovieNoms(movieNoms => [...movieNoms, movie]);\n            }            \n        }\n    }\n\n    function handleRemove(event) {       \n        const nomList = movieNoms.filter((item) => item.imdbID !== event.target.value);\n        setMovieNoms(nomList);\n    }\n\n    function blurSearch(movieList) {\n        if (movieList.length === 5) {\n            props.displayBanner(true);\n            document.getElementById('search-list').classList.add('max-reached');\n        }\n        else {\n            props.displayBanner();\n            document.getElementById('search-list').classList.remove('max-reached');               \n        }\n    }\n\n    useEffect(() => localStorage.setItem('savedMovieNoms', JSON.stringify(movieNoms)), [movieNoms]);\n\n    useEffect(() => blurSearch(movieNoms));\n\n    return (\n        <>\n        <div id=\"search-list\" className=\"movie-list\">\n            <h2 className='movie-list-title'>\n                {props.movies.length === 0 ? \"Search for your favorite movies\": \"Search Results\"}\n            </h2>              \n            <div className={`card-container d-flex w-100 ${windowWidth<787 && props.movies.length!==0 ? 'card-container-sml' : ''}`}>\n                {props.movies.map((movie) => \n                <div className=\"d-flex justify-content-start m-4\">\n                    <div key={movie.imdbID} className=\"d-flex flex-column justify-content-start movie-card\">\n                        <img className=\"movie-poster\" src={movie.Poster === 'N/A' ? genericPoster : movie.Poster} alt={`${movie.Title} movie poster`}></img>\n                        <h3 className=\"h4 text-center\">{`${movie.Title} (${movie.Year})`}</h3>\n                        <button id={`${movie.imdbID}-btn`} type=\"button\" className={`btn ${!movieNoms.some(e => e.imdbID === movie.imdbID) ? 'btn-success' : 'btn-secondary'} movie-nom-btn`} onClick={handleAdd} value={JSON.stringify(movie)}\n                        disabled={(movieNoms.some(e => e.imdbID === movie.imdbID))}>\n                            {(movieNoms.some(e => e.imdbID === movie.imdbID)) ? 'Nominated' : 'Nominate'}\n                        </button>        \n                    </div>\n                </div>\n                 )}\n            \n            </div>\n        </div>\n\n        <div className=\"movie-list\">\n            <h2 className='movie-list-title'>\n                {movieNoms.length === 0 ? \"\": `Your nominated movies (${movieNoms.length} of 5)`}\n            </h2>\n            <div className=\"card-container d-flex w-100\">\n                {movieNoms.map((movie) =>\n                <div className=\"d-flex justify-content-start m-4\">\n                    <div key={movie.imdbID} className=\"d-flex flex-column justify-content-start movie-card\">\n                        <img className=\"movie-poster\" src={movie.Poster === 'N/A' ? genericPoster : movie.Poster} alt={`${movie.Title} movie poster`}></img>\n                        <h3 className=\"h4 text-center\">{`${movie.Title} (${movie.Year})`}</h3>\n                        <p>{movie.nominated}</p>\n                        <button type=\"button\" className=\"btn btn-danger movie-denom-btn\" onClick={handleRemove} value={movie.imdbID}>Remove</button>\n                    </div>\n                </div>\n                )}\n            </div>\n        </div>\n        </>\n    );\n};\n\nexport default MovieList;\n","import React from 'react';\n\nconst MovieListHeading = (props) => {\n    return (\n        <div className='col col-sm-4'>\n            <h1>{props.heading}</h1>\n        </div>\n    );\n};\n\nexport default MovieListHeading;","import React from 'react';\n\nconst SearchBox = (props) => {\n\n    return (\n        <div className='search-box col col-sm-4'>\n            <input className='form-control' \n            value={props.value}\n            onChange={(event) => props.setSearchValue(event.target.value)}\n            placeholder='Type to search movie titles...'></input>\n        </div>\n    );\n};\n\nexport default SearchBox;","import React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n\n    const getMovieRequest = async (searchValue) => {\n        const url = `https://www.omdbapi.com/?apikey=b1f40189&s=${searchValue}&type=movie`;\n        \n        const response = await fetch(url);\n        const responseJSON = await response.json();\n\n        if(responseJSON.Search) {\n            setMovies(responseJSON.Search);\n        };\n    };\n\n    useEffect(()=> {\n        const timeoutId = setTimeout(() => getMovieRequest(searchValue), 500);\n        return () => clearTimeout(timeoutId);\n        \n    }, [searchValue]);\n\n    function displayBanner(maxReached=false){\n        let banner = document.getElementById('banner');\n        if (maxReached) {\n            banner.innerHTML = 'Max nominations reached!';\n        }\n        else {\n            banner.innerHTML = '';\n        }\n    }\n\n    return (\n        <div className=\"container-fluid movie-app\">\n            <div className='movie-list-heading row d-flex align-items-center mt-4 mb-4'>\n                <MovieListHeading heading=\"Top 5 Movie Nominations\" />\n                <p id=\"banner\" className='col banner'></p>\n                <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n            </div>\n            <div className='row'>\n                <MovieList movies={movies} displayBanner={displayBanner}/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}