{"version":3,"sources":["components/MovieList.js","components/MovieListHeading.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["genericPoster","MovieList","props","movieNomsArray","localStorage","getItem","JSON","parse","useState","movieNoms","setMovieNoms","handleAdd","event","movie","target","value","length","document","getElementById","classList","add","some","e","imdbID","handleRemove","remove","nomList","filter","item","useEffect","setItem","stringify","id","className","movies","map","src","Poster","alt","Title","Year","type","onClick","disabled","nominated","MovieListHeading","heading","SearchBox","onChange","setSearchValue","placeholder","App","setMovies","searchValue","getMovieRequest","a","url","fetch","response","json","responseJSON","Search","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fb7c31a8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst genericPoster = 'https://s.studiobinder.com/wp-content/uploads/2017/12/Movie-Poster-Template-Dark-with-Image.jpg?x81279';\n\nconst MovieList = (props) => {\n    \n    let movieNomsArray = localStorage.getItem('savedMovieNoms') ? JSON.parse(localStorage.getItem('savedMovieNoms')) : [];\n\n    const [movieNoms, setMovieNoms] = useState(movieNomsArray || []);\n\n    \n    function handleAdd(event) {\n        let movie = JSON.parse(event.target.value);\n\n        if (movieNoms.length === 4) {\n            document.getElementById('search-list').classList.add('max-reached');\n            // document.querySelectorAll('button.movie-nom-btn')\n            //     .forEach((e) => {e.setAttribute(\"disabled\", \"disabled\");});  possible to come back to and disable all buttons \n        }\n\n        if (!movieNoms.some(e => e.imdbID === movie.imdbID)){\n            if (movieNoms.length < 5){\n                setMovieNoms(movieNoms => [...movieNoms, movie]);\n            }\n            \n        }\n    }\n\n    function handleRemove(event) {\n        if (movieNoms.length === 5) {\n            document.getElementById('search-list').classList.remove('max-reached');\n            // document.querySelectorAll('button.movie-nom-btn')\n            //     .forEach((e) => {e.removeAttribute(\"disabled\");}); need to come back to this if it doesn't reset all buttons.\n        }\n        const nomList = movieNoms.filter((item) => item.imdbID !== event.target.value);\n        // document.getElementById(`${event.target.value}-btn`).removeAttribute(\"disabled\");\n        setMovieNoms(nomList);\n    }\n\n    useEffect(() => localStorage.setItem('savedMovieNoms', JSON.stringify(movieNoms)), [movieNoms]);\n\n    return (\n        <>\n        <div id=\"search-list\" className=\"movie-list d-flex w-100\">\n        {props.movies.map((movie) => \n            <div className=\"d-flex justify-content-start m-4\">\n                <div key={movie.imdbID} className=\"d-flex flex-column justify-content-start movie-card\">\n                    <img className=\"movie-poster\" src={movie.Poster === 'N/A' ? genericPoster : movie.Poster} alt={`${movie.Title} movie poster`}></img>\n                    <h2 className=\"h4 text-center\">{`${movie.Title} (${movie.Year})`}</h2>\n                    <button id={`${movie.imdbID}-btn`} type=\"button\" className=\"btn btn-success movie-nom-btn\" onClick={handleAdd} value={JSON.stringify(movie)}\n                     disabled={(movieNoms.some(e => e.imdbID === movie.imdbID))}>\n                         {(movieNoms.some(e => e.imdbID === movie.imdbID)) ? 'Nominated' : 'Nominate'}\n                    </button>        \n                </div>\n            </div>\n        )}\n        </div>\n        <div className=\"movie-list d-flex w-100\">\n            {movieNoms.map((movie) =>\n                <div className=\"d-flex justify-content-start m-4\">\n                <div key={movie.imdbID} className=\"d-flex flex-column justify-content-start movie-card\">\n                    <img className=\"movie-poster\" src={movie.Poster === 'N/A' ? genericPoster : movie.Poster} alt={`${movie.Title} movie poster`}></img>\n                    <h2 className=\"h4 text-center\">{`${movie.Title} (${movie.Year})`}</h2>\n                    <p>{movie.nominated}</p>\n                    <button type=\"button\" className=\"btn btn-danger movie-denom-btn\" onClick={handleRemove} value={movie.imdbID}>Remove</button>\n                </div>\n            </div>\n            \n            )}\n        </div>\n        </>\n    );\n};\n\nexport default MovieList;\n","import React from 'react';\n\nconst MovieListHeading = (props) => {\n    return (\n        <div className='col'>\n            <h1>{props.heading}</h1>\n        </div>\n    );\n};\n\nexport default MovieListHeading;","import React from 'react';\n\nconst SearchBox = (props) => {\n    return (\n        <div className='col col-sm-4'>\n            <input className='form-control' \n            value={props.value}\n            onChange={(event) => props.setSearchValue(event.target.value)}\n            placeholder='Type to search movie titles...'></input>\n        </div>\n    );\n};\n\nexport default SearchBox;","import React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n\n    const getMovieRequest = async (searchValue) => {\n        const url = `https://www.omdbapi.com/?apikey=b1f40189&s=${searchValue}&type=movie`;\n        \n        const response = await fetch(url);\n        const responseJSON = await response.json();\n\n        if(responseJSON.Search) {\n            setMovies(responseJSON.Search);\n        };\n    };\n\n    useEffect(()=> {\n        getMovieRequest(searchValue);\n    }, [searchValue]);\n\n    console.log(movies);\n\n    return (\n        <div className=\"container-fluid movie-app\">\n            <div className='movie-list-heading row d-flex align-items-center mt-4 mb-4'>\n                <MovieListHeading heading=\"Top 5 Movie Nominations\" />\n                <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n            </div>\n            <div className='row'>\n                <MovieList movies={movies} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}