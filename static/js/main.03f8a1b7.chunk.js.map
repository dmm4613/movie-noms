{"version":3,"sources":["components/MovieList.js","components/MovieListHeading.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["genericPoster","MovieList","props","useState","movieNoms","setMovieNoms","handleAdd","event","movie","JSON","parse","target","value","some","e","imdbID","length","window","alert","handleRemove","nomList","filter","item","className","movies","map","src","Poster","alt","Title","Year","type","onClick","stringify","nominated","MovieListHeading","heading","SearchBox","onChange","setSearchValue","placeholder","App","setMovies","searchValue","getMovieRequest","a","url","fetch","response","json","responseJSON","Search","useEffect","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03f8a1b7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nconst genericPoster = 'https://s.studiobinder.com/wp-content/uploads/2017/12/Movie-Poster-Template-Dark-with-Image.jpg?x81279';\n\nconst MovieList = (props) => {\n\n    const [movieNoms, setMovieNoms] = useState([]);\n    \n    function handleAdd(event) {\n        let movie = JSON.parse(event.target.value);\n        if (!movieNoms.some(e => e.imdbID === movie.imdbID)){\n            if (movieNoms.length < 5){\n                setMovieNoms(movieNoms => [...movieNoms, movie]);\n            }\n            else {\n                window.alert(\"You have nominated 5 movies\")\n            }\n        }\n    }\n\n    function handleRemove(event) {\n        const nomList = movieNoms.filter((item) => item.imdbID !== event.target.value);\n        setMovieNoms(nomList);\n    }\n\n    return (\n        <>\n        <div className=\"movie-list d-flex w-100\">\n        {props.movies.map((movie) => \n            <div className=\"d-flex justify-content-start m-4\">\n                <div key={movie.imdbID} className=\"d-flex flex-column justify-content-start movie-card\">\n                    <img className=\"movie-poster\" src={movie.Poster === 'N/A' ? genericPoster : movie.Poster} alt={`${movie.Title} movie poster`}></img>\n                    <h2 className=\"h4 text-center\">{`${movie.Title} (${movie.Year})`}</h2>\n                    <button type=\"button\" className=\"btn btn-secondary movie-nom-btn\" onClick={handleAdd} value={JSON.stringify(movie)}>Nominate</button>\n                </div>\n            </div>\n        )}\n        </div>\n        <div className=\"movie-list d-flex w-100\">\n            {movieNoms.map((movie) =>\n                <div className=\"d-flex justify-content-start m-4\">\n                <div key={movie.imdbID} className=\"d-flex flex-column justify-content-start movie-card\">\n                    <img className=\"movie-poster\" src={movie.Poster === 'N/A' ? genericPoster : movie.Poster} alt={`${movie.Title} movie poster`}></img>\n                    <h2 className=\"h4 text-center\">{`${movie.Title} (${movie.Year})`}</h2>\n                    <p>{movie.nominated}</p>\n                    <button type=\"button\" className=\"btn btn-secondary movie-nom-btn\" onClick={handleRemove} value={movie.imdbID}>Remove</button>\n                </div>\n            </div>\n            \n            )}\n        </div>\n        </>\n    );\n};\n\nexport default MovieList;\n","import React from 'react';\n\nconst MovieListHeading = (props) => {\n    return (\n        <div className='col'>\n            <h1>{props.heading}</h1>\n        </div>\n    );\n};\n\nexport default MovieListHeading;","import React from 'react';\n\nconst SearchBox = (props) => {\n    return (\n        <div className='col col-sm-4'>\n            <input className='form-control' \n            value={props.value}\n            onChange={(event) => props.setSearchValue(event.target.value)}\n            placeholder='Type to search movie titles...'></input>\n        </div>\n    );\n};\n\nexport default SearchBox;","import React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n\n    const getMovieRequest = async (searchValue) => {\n        const url = `https://www.omdbapi.com/?apikey=b1f40189&s=${searchValue}`;\n        \n        const response = await fetch(url);\n        const responseJSON = await response.json();\n\n        if(responseJSON.Search) {\n            setMovies(responseJSON.Search);\n        };\n    };\n\n    useEffect(()=> {\n        getMovieRequest(searchValue);\n    }, [searchValue]);\n\n    console.log(movies);\n\n    return (\n        <div className=\"container-fluid movie-app\">\n            <div className='movie-list-heading row d-flex align-items-center mt-4 mb-4'>\n                <MovieListHeading heading=\"Top 5 Movie Nominations\" />\n                <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n            </div>\n            <div className='row'>\n                <MovieList movies={movies} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}